plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'net.mineles'
version = '1.0.0'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()

    maven { url = 'https://jitpack.io' }
    maven { url = 'https://repo.papermc.io/repository/maven-public/' }
    maven { url = 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
    maven { url = 'https://repo.codemc.org/repository/maven-public/' }
    maven { url = 'https://repo.aikar.co/content/groups/aikar/' }
    maven { url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }
}

dependencies {
    implementation 'co.aikar:acf-paper:0.5.1-SNAPSHOT'

    implementation 'com.github.cryptomorin:XSeries:9.2.0'
    implementation 'de.tr7zw:item-nbt-api-plugin:2.11.2'

    implementation 'io.projectreactor:reactor-core:3.5.8'

    implementation 'com.github.docker-java:docker-java-transport-httpclient5:3.3.2'
    implementation 'com.github.docker-java:docker-java-core:3.3.2'


    compileOnly 'io.papermc.paper:paper-api:1.20.1-R0.1-SNAPSHOT'
    compileOnly 'com.mojang:authlib:1.5.25'

    compileOnly 'com.comphenix.protocol:ProtocolLib:5.0.0-SNAPSHOT'
    compileOnly 'me.clip:placeholderapi:2.11.3'

    compileOnly 'org.jetbrains:annotations:24.0.0'
    compileOnly 'org.checkerframework:checker-qual:3.12.0'

    compileOnly 'com.google.guava:guava:32.1.1-jre'
    compileOnly 'com.google.code.gson:gson:2.8.0'
}

shadowJar {
    archiveFileName = 'MinelesLibrary-' + project.version + '.jar'

    relocate 'io.papermc', project.group + '.libs.papermc'

    relocate 'co.aikar.commands', project.group + '.libs.commands'
    relocate 'co.aikar.locales', project.group + '.libs.locales'

    relocate 'com.cryptomorin.xseries', project.group + '.libs.xseries'
    relocate 'de.tr7zw', project.group + '.libs.item-nbt-api'
}

artifacts {
    archives shadowJar
}

processResources {
    def props = [version: version]
    inputs.properties props
    expand props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

publishing {
    publications {
        shadow(MavenPublication) {
            from components.java
        }
    }
}
